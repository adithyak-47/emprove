(()=>{var e={970:(e,s,r)=>{r(860);const o=r(185),d=new o.Schema({name:String,email:String,password:String,users:[String]}),n=o.model("Admin",d);e.exports=n},638:(e,s,r)=>{r(860);const o=r(185),d=new o.Schema({name:{type:String,required:!0},description:String,deadline:String,assignedTo:String,completed:Boolean}),n=o.model("Task",d);e.exports=n},590:(e,s,r)=>{r(860);const o=r(185),d=new o.Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0},pomodoroCount:{type:Number,default:0},drowsinessCount:{type:Number,default:0},workStressScore:{type:Number,default:0},pomodoroCountArray:{type:[Number]},drowsinessCountArray:{type:[Number]},workStressScoreArray:{type:[Number]},timestampArray:{type:[String]}}),n=o.model("User",d);e.exports=n},986:e=>{"use strict";e.exports=require("body-parser")},860:e=>{"use strict";e.exports=require("express")},490:e=>{"use strict";e.exports=require("md5")},185:e=>{"use strict";e.exports=require("mongoose")}},s={};function r(o){var d=s[o];if(void 0!==d)return d.exports;var n=s[o]={exports:{}};return e[o](n,n.exports,r),n.exports}(()=>{const e=r(185),s=r(860),o=r(986),d=r(490),n=r(638),t=r(590),i=r(970),a=s();var l;a.set("view engine","ejs"),a.set("views","./views"),a.use(s.static("public")),a.use(o.json()),a.use(o.urlencoded({extended:!0})),e.connect("mongodb://127.0.0.1:27017/emprove"),a.get("/",((e,s)=>{s.sendFile(__dirname+"/public/home.html")})),a.post("/sign-up",((e,s)=>{new t({name:e.body.name,email:e.body.email,password:d(e.body.password)}).save((r=>{r?s.redirect("sign-up.html"):(i.findOne({email:"admin@gmail.com"},((s,r)=>{r&&(r.users.push(e.body.email),r.save())})),s.redirect("home.html"))}))})),a.post("/sign-in",((e,s)=>{let r=e.body.email,o=d(e.body.password);t.findOne({email:r},((e,d)=>{e&&s.redirect("sign-in.html"),d&&(d.password===o?(l=r,s.render("user-dashboard",{userComponentRender:!0})):s.redirect("sign-in.html"))}))})),a.post("/admin-signin",((e,s)=>{let r=e.body.email,o=d(e.body.password);i.findOne({email:r},((e,d)=>{e&&s.redirect("admin-signin.html"),d&&(d.password===o?(l=r,i.findOne({email:l},((e,r)=>{r&&s.render("admin-dashboard",{details:r})}))):s.redirect("admin-signin.html"))}))})),a.get("/admin-to-user/:id",((e,s)=>{let r=e.params.id;t.findOne({email:r},((e,o)=>{e&&s.render("admin-dashboard"),o&&(l=r,s.render("user-dashboard",{userComponentRender:!1}))}))})),a.get("/productivity-report/:id",((e,s)=>{let r=e.params.id;l=r,t.findOne({email:l},((e,r)=>{n.find({assignedTo:l},((e,o)=>{r&&o&&s.render("productivity-report",{userDetails:r,taskDetails:o})}))}))})),a.get("/api/tasks",((e,s)=>{n.find({assignedTo:l},((e,r)=>{r&&s.json(r)}))})),a.get("/api/users",((e,s)=>{t.findOne({email:l},((e,r)=>{r&&s.json(r)}))})),a.post("/create-task",((e,s)=>{n.create({name:e.body.name,description:e.body.description,deadline:e.body.deadline,assignedTo:l},((e,r)=>{e||s.send(r)}))})),a.post("/update-task",(async(e,s)=>{await n.findByIdAndUpdate(e.body._id,{name:e.body.name,description:e.body.description,deadline:e.body.deadline}),s.send("Updated successfully")})),a.delete("/task/:id",(async(e,s)=>{await n.findByIdAndDelete(e.params.id),s.send("Deleted successfully")})),a.get("/work-stress-assessment/:id",((e,s)=>{let r=e.params.id;s.render("work-stress-assessment",{email:r})})),a.post("/work-stress-assessment",((e,s)=>{let r=e.body.email,o=0;Object.keys(e.body).forEach((s=>{"email"!=s&&(o+=parseInt(e.body[s]))})),t.findOneAndUpdate({email:r},{workStressScore:o},null,(e=>{e&&console.log(e)})),l=r,s.render("user-dashboard",{userComponentRender:!0})})),a.post("/pomodoro-count",((e,s)=>{let r=e.body.email;t.findOneAndUpdate({email:r},{$inc:{pomodoroCount:1}},null,(e=>{e&&console.log(e)})),s.send("Updated successfully")})),a.post("/drowsiness-count",((e,s)=>{t.findOneAndUpdate({email:l},{$inc:{drowsinessCount:1}},null,(e=>{e&&console.log(e)})),s.send("Updated successfully")})),a.post("/update-chart-arrays",((e,s)=>{var r=e.body.email,o=e.body.pomodoroCount,d=e.body.drowsinessCount,n=e.body.workStressScore,i=e.body.timestamp;t.findOneAndUpdate({email:r},{$push:{pomodoroCountArray:o,drowsinessCountArray:d,workStressScoreArray:n,timestampArray:i}},null,(e=>{e&&console.log(e)})),s.send("Updated successfully")})),a.listen(3e3,(()=>{console.log("Server is listening on port 3000")}))})()})();