(()=>{var e={970:(e,s,n)=>{n(860);const d=n(185),r=new d.Schema({name:String,email:String,password:String,users:[String]}),i=d.model("Admin",r);e.exports=i},638:(e,s,n)=>{n(860);const d=n(185),r=new d.Schema({name:{type:String,required:!0},description:String,deadline:String,assignedTo:String,completed:Boolean}),i=d.model("Task",r);e.exports=i},590:(e,s,n)=>{n(860);const d=n(185),r=new d.Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0},pomodoroCount:{type:Number,default:0},drowsinessCount:{type:Number,default:0},workStressScore:{type:Number,default:0}}),i=d.model("User",r);e.exports=i},986:e=>{"use strict";e.exports=require("body-parser")},860:e=>{"use strict";e.exports=require("express")},490:e=>{"use strict";e.exports=require("md5")},185:e=>{"use strict";e.exports=require("mongoose")}},s={};function n(d){var r=s[d];if(void 0!==r)return r.exports;var i=s[d]={exports:{}};return e[d](i,i.exports,n),i.exports}(()=>{const e=n(185),s=n(860),d=n(986),r=n(490),i=n(638),t=n(590),o=n(970),a=s();var l;a.set("view engine","ejs"),a.set("views","./views"),a.use(s.static("public")),a.use(d.json()),a.use(d.urlencoded({extended:!0})),e.connect("mongodb://127.0.0.1:27017/emprove"),a.get("/",((e,s)=>{s.sendFile(__dirname+"/public/home.html")})),a.post("/sign-up",((e,s)=>{new t({name:e.body.name,email:e.body.email,password:r(e.body.password)}).save((n=>{n?s.redirect("sign-up.html"):(o.findOne({email:"admin@gmail.com"},((s,n)=>{n&&(n.users.push(e.body.email),n.save())})),s.redirect("home.html"))}))})),a.post("/sign-in",((e,s)=>{let n=e.body.email,d=r(e.body.password);t.findOne({email:n},((e,r)=>{e&&s.redirect("sign-in.html"),r&&(r.password===d?(l=n,s.render("user-dashboard",{userComponentRender:!0})):s.redirect("sign-in.html"))}))})),a.post("/admin-signin",((e,s)=>{let n=e.body.email,d=r(e.body.password);o.findOne({email:n},((e,r)=>{e&&s.redirect("admin-signin.html"),r&&(r.password===d?(l=n,o.findOne({email:l},((e,n)=>{n&&s.render("admin-dashboard",{details:n})}))):s.redirect("admin-signin.html"))}))})),a.get("/admin-to-user/:id",((e,s)=>{let n=e.params.id;t.findOne({email:n},((e,d)=>{e&&s.render("admin-dashboard"),d&&(l=n,s.render("user-dashboard",{userComponentRender:!1}))}))})),a.get("/productivity-report/:id",((e,s)=>{let n=e.params.id;l=n,t.findOne({email:l},((e,n)=>{i.find({assignedTo:l},((e,d)=>{n&&d&&s.render("productivity-report",{userDetails:n,taskDetails:d})}))}))})),a.get("/api/tasks",((e,s)=>{i.find({assignedTo:l},((e,n)=>{n&&s.json(n)}))})),a.get("/api/users",((e,s)=>{t.findOne({email:l},((e,n)=>{n&&s.json(n)}))})),a.post("/create-task",((e,s)=>{i.create({name:e.body.name,description:e.body.description,deadline:e.body.deadline,assignedTo:l},((e,n)=>{e||s.send(n)}))})),a.post("/update-task",(async(e,s)=>{await i.findByIdAndUpdate(e.body._id,{name:e.body.name,description:e.body.description,deadline:e.body.deadline}),s.send("Updated successfully")})),a.delete("/task/:id",(async(e,s)=>{await i.findByIdAndDelete(e.params.id),s.send("Deleted successfully")})),a.get("/work-stress-assessment/:id",((e,s)=>{let n=e.params.id;s.render("work-stress-assessment",{email:n})})),a.post("/work-stress-assessment",((e,s)=>{let n=e.body.email,d=0;Object.keys(e.body).forEach((s=>{"email"!=s&&(d+=parseInt(e.body[s]))})),t.findOneAndUpdate({email:n},{workStressScore:d},null,(e=>{e&&console.log(e)})),l=n,s.render("user-dashboard",{userComponentRender:!0})})),a.post("/pomodoro-count",((e,s)=>{let n=e.body.email;t.findOneAndUpdate({email:n},{$inc:{pomodoroCount:1}},null,(e=>{e&&console.log(e)})),s.send("Updated successfully")})),a.post("/drowsiness-count",((e,s)=>{t.findOneAndUpdate({email:l},{$inc:{drowsinessCount:1}},null,(e=>{e&&console.log(e)})),s.send("Updated successfully")})),a.listen(3e3,(()=>{console.log("Server is listening on port 3000")}))})()})();