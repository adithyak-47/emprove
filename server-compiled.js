(()=>{var e={970:(e,s,r)=>{r(860);const n=r(185),i=new n.Schema({name:String,password:String,users:[String]}),d=n.model("Admin",i);e.exports=d},638:(e,s,r)=>{r(860);const n=r(185),i=new n.Schema({name:{type:String,required:!0},description:String,deadline:String,assignedTo:String,completed:Boolean}),d=n.model("Task",i);e.exports=d},590:(e,s,r)=>{r(860);const n=r(185),i=new n.Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0}}),d=n.model("User",i);e.exports=d},986:e=>{"use strict";e.exports=require("body-parser")},860:e=>{"use strict";e.exports=require("express")},490:e=>{"use strict";e.exports=require("md5")},185:e=>{"use strict";e.exports=require("mongoose")}},s={};function r(n){var i=s[n];if(void 0!==i)return i.exports;var d=s[n]={exports:{}};return e[n](d,d.exports,r),d.exports}(()=>{const e=r(185),s=r(860),n=r(986),i=r(490),d=r(638),t=r(590),o=r(970),a=s();var p;a.set("view engine","ejs"),a.set("views","./views"),a.use(s.static("public")),a.use(n.json()),a.use(n.urlencoded({extended:!0})),e.connect("mongodb://127.0.0.1:27017/emprove"),a.get("/tasks",((e,s)=>{d.find(((e,r)=>{if(e)return console.error(e);s.send(r)}))})),a.get("/",((e,s)=>{s.sendFile(__dirname+"/public/home.html")})),a.post("/sign-up",((e,s)=>{new t({name:e.body.name,email:e.body.email,password:i(e.body.password)}).save((r=>{r?s.redirect("sign-up.html"):(o.findOne({email:"admin@gmail.com"},((s,r)=>{r&&(r.users.push(e.body.email),r.save())})),s.redirect("home.html"))}))})),a.post("/sign-in",((e,s)=>{let r=e.body.email,n=i(e.body.password);t.findOne({email:r},((e,i)=>{e&&s.redirect("sign-in.html"),i&&(i.password===n?(p=r,s.render("dashboard")):s.redirect("sign-in.html"))}))})),a.get("/dashboard",((e,s)=>{s.render("dashboard")})),a.get("/api/tasks",((e,s)=>{d.find({assignedTo:p},((e,r)=>{r&&s.json(r)}))})),a.get("/api/users",((e,s)=>{t.findOne({email:p},((e,r)=>{r&&s.json(r)}))})),a.post("/create-task",((e,s)=>{d.create({name:e.body.name,description:e.body.description,deadline:e.body.deadline,assignedTo:p},((e,r)=>{e||s.send(r)}))})),a.post("/update-task",(async(e,s)=>{await d.findByIdAndUpdate(e.body._id,{name:e.body.name,description:e.body.description,deadline:e.body.deadline}),s.send("Updated successfully")})),a.delete("/task/:id",(async(e,s)=>{await d.findByIdAndDelete(e.params.id),s.send("Deleted successfully")})),a.listen(3e3,(()=>{console.log("Server is listening on port 3000")}))})()})();