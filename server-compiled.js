(()=>{var e={970:(e,s,i)=>{i(860);const d=i(185),n=new d.Schema({name:String,email:String,password:String,users:[String]}),r=d.model("Admin",n);e.exports=r},638:(e,s,i)=>{i(860);const d=i(185),n=new d.Schema({name:{type:String,required:!0},description:String,deadline:String,assignedTo:String,completed:Boolean}),r=d.model("Task",n);e.exports=r},590:(e,s,i)=>{i(860);const d=i(185),n=new d.Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0}}),r=d.model("User",n);e.exports=r},986:e=>{"use strict";e.exports=require("body-parser")},860:e=>{"use strict";e.exports=require("express")},490:e=>{"use strict";e.exports=require("md5")},185:e=>{"use strict";e.exports=require("mongoose")}},s={};function i(d){var n=s[d];if(void 0!==n)return n.exports;var r=s[d]={exports:{}};return e[d](r,r.exports,i),r.exports}(()=>{const e=i(185),s=i(860),d=i(986),n=i(490),r=i(638),t=i(590),a=i(970),o=s();var m;o.set("view engine","ejs"),o.set("views","./views"),o.use(s.static("public")),o.use(d.json()),o.use(d.urlencoded({extended:!0})),e.connect("mongodb://127.0.0.1:27017/emprove"),o.get("/",((e,s)=>{s.sendFile(__dirname+"/public/home.html")})),o.post("/sign-up",((e,s)=>{new t({name:e.body.name,email:e.body.email,password:n(e.body.password)}).save((i=>{i?s.redirect("sign-up.html"):(a.findOne({email:"admin@gmail.com"},((s,i)=>{i&&(i.users.push(e.body.email),i.save())})),s.redirect("home.html"))}))})),o.post("/sign-in",((e,s)=>{let i=e.body.email,d=n(e.body.password);t.findOne({email:i},((e,n)=>{e&&s.redirect("sign-in.html"),n&&(n.password===d?(m=i,s.render("user-dashboard")):s.redirect("sign-in.html"))}))})),o.post("/admin-signin",((e,s)=>{let i=e.body.email,d=n(e.body.password);a.findOne({email:i},((e,n)=>{e&&s.redirect("admin-signin.html"),n&&(n.password===d?(m=i,a.findOne({email:m},((e,i)=>{i&&s.render("admin-dashboard",{details:i})}))):s.redirect("admin-signin.html"))}))})),o.get("/admin-to-user/:id",((e,s)=>{let i=e.params.id;t.findOne({email:i},((e,d)=>{e&&s.render("admin-dashboard"),d&&(m=i,s.render("user-dashboard"))}))})),o.get("/api/tasks",((e,s)=>{r.find({assignedTo:m},((e,i)=>{i&&s.json(i)}))})),o.get("/api/users",((e,s)=>{t.findOne({email:m},((e,i)=>{i&&s.json(i)}))})),o.post("/create-task",((e,s)=>{r.create({name:e.body.name,description:e.body.description,deadline:e.body.deadline,assignedTo:m},((e,i)=>{e||s.send(i)}))})),o.post("/update-task",(async(e,s)=>{await r.findByIdAndUpdate(e.body._id,{name:e.body.name,description:e.body.description,deadline:e.body.deadline}),s.send("Updated successfully")})),o.delete("/task/:id",(async(e,s)=>{await r.findByIdAndDelete(e.params.id),s.send("Deleted successfully")})),o.listen(3e3,(()=>{console.log("Server is listening on port 3000")}))})()})();